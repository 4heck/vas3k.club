from django import forms

from common.url_metadata_parser import parse_url_preview
from posts.models import Topic, Post
from utils.forms import ImageUploadField


class PostForm(forms.ModelForm):
    topic = forms.ModelChoiceField(
        label="–ö–æ–º–Ω–∞—Ç–∞",
        required=False,
        empty_label="–î–ª—è –≤—Å–µ—Ö",
        queryset=Topic.objects.filter(is_visible=True).all(),
    )
    is_public = forms.BooleanField(
        label="–í–∏–¥–µ–Ω –ª–∏ –≤ –±–æ–ª—å—à–æ–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç?",
        initial=True,
        required=False
    )
    is_visible = forms.BooleanField(
        label="–í–∏–¥–µ–Ω –ª–∏ –ø–æ—Å—Ç –≤–æ–æ–±—â–µ?",
        initial=False,
        required=False
    )
    is_visible_on_main_page = forms.BooleanField(
        label="–í–∏–¥–µ–ª –ª–∏ –ø–æ—Å—Ç –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ?",
        initial=True,
        required=False
    )

    class Meta:
        abstract = True

    def clean_topic(self):
        topic = self.cleaned_data["topic"]

        if topic and not topic.is_visible_on_main_page:
            # topic settings are more important
            self.instance.is_visible_on_main_page = False

        return topic


class PostTextForm(PostForm):
    title = forms.CharField(
        label="–ó–∞–≥–æ–ª–æ–≤–æ–∫",
        required=True,
        max_length=128,
        widget=forms.TextInput(attrs={"placeholder": "–ó–∞–≥–æ–ª–æ–≤–æ–∫ ü§ô"}),
    )
    text = forms.CharField(
        label="–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞",
        required=True,
        max_length=500000,
        widget=forms.Textarea(
            attrs={
                "maxlength": 500000,
                "class": "markdown-editor-full",
                "placeholder": "–î–æ—Ä–æ–≥–æ–π –ú–∞—Ä—Ç–∏–Ω –ê–ª–µ–∫—Å–µ–µ–≤–∏—á..."
            }
        ),
    )

    class Meta:
        model = Post
        fields = ["title", "text", "topic", "is_visible", "is_public"]


class PostLinkForm(PostForm):
    url = forms.URLField(
        label="–°—Å—ã–ª–∫–∞",
        required=True,
        widget=forms.TextInput(attrs={"placeholder": "–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É —Å—é–¥–∞ ü§è"}),
    )
    title = forms.CharField(
        label="–ó–∞–≥–æ–ª–æ–≤–æ–∫",
        required=True,
        max_length=128,
        widget=forms.TextInput(attrs={"placeholder": "–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Å—ã–ª–∫–∏"}),
    )
    text = forms.CharField(
        label="TL;DR",
        required=True,
        max_length=50000,
        widget=forms.Textarea(
            attrs={
                "maxlength": 50000,
                "class": "markdown-editor-full",
                "placeholder": "–ù–∞–ø–∏—à–∏—Ç–µ TL;DR —á—Ç–æ–±—ã —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –¥—Ä—É–≥–∏–º –≤—Ä–µ–º—è."
                               "\n\n–ö–æ—Ä–æ—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —á–µ–º —Å—Å—ã–ª–∫–∞ –∏ –ø–æ—á–µ–º—É –≤—Å–µ –¥–æ–ª–∂–Ω—ã –µ—ë –ø—Ä–æ—á–∏—Ç–∞—Ç—å. ",
            }
        ),
    )

    class Meta:
        model = Post
        fields = [
            "title",
            "text",
            "url",
            "topic",
            "is_visible",
            "is_public"
        ]

    def clean(self):
        cleaned_data = super().clean()

        parsed_url = parse_url_preview(cleaned_data["url"])
        if parsed_url:
            self.instance.metadata = dict(parsed_url._asdict())
            self.instance.url = parsed_url.url
            self.instance.image = parsed_url.favicon

        return cleaned_data


class PostQuestionForm(PostForm):
    title = forms.CharField(
        label="–ó–∞–≥–æ–ª–æ–≤–æ–∫",
        required=True,
        max_length=128,
        widget=forms.TextInput(attrs={"placeholder": "–í–æ–ø—Ä–æ—Å –∫–æ—Ä–æ—Ç–∫–æ ü§î"}),
    )
    text = forms.CharField(
        label="–†–∞–∑–≤–µ—Ä–Ω—É—Ç–∞—è –≤–µ—Ä—Å–∏—è",
        required=True,
        max_length=500000,
        widget=forms.Textarea(
            attrs={
                "maxlength": 500000,
                "class": "markdown-editor-full",
                "placeholder": "–ë–æ–ª—å—à–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π ‚Äî –±—ã—Å—Ç—Ä–µ–µ –∫—Ç–æ-–Ω–∏–±—É–¥—å —Å–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–º–æ—á—å. "
                               "–ù–æ –∏ –ø–µ—Ä–µ–±–∞—Ä—â–∏–≤–∞—Ç—å –Ω–µ —Å—Ç–æ–∏—Ç. "
                               "\n\n–û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω–æ –±—É–¥–µ—Ç —É–∑–Ω–∞—Ç—å –∫–∞–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è "
                               "–≤—ã —É–∂–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª–∏ –∏ –ø–æ—á–µ–º—É –æ–Ω–∏ –Ω–µ –ø–æ–¥–æ—à–ª–∏.",
            }
        ),
    )

    class Meta:
        model = Post
        fields = [
            "title",
            "text",
            "topic",
            "is_visible",
            "is_public"
        ]


class PostPainForm(PostForm):
    title = forms.CharField(
        label="–ó–∞–≥–æ–ª–æ–≤–æ–∫",
        required=True,
        max_length=128,
        widget=forms.TextInput(attrs={"placeholder": "–ö—Ä–∞—Ç–∫–æ —Å—É—Ç—å –±–æ–ª–∏ üò≠"}),
    )
    text = forms.CharField(
        label="–†–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
        required=True,
        max_length=500000,
        widget=forms.Textarea(
            attrs={
                "maxlength": 500000,
                "class": "markdown-editor-full",
                "placeholder": "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π –±–æ–ª—å—é –≤ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è—Ö. "
                               "\n\n–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã —Å–∏—Ç—É–∞—Ü–∏–π, –∫–æ–≥–¥–∞ –ø—Ä–æ–±–ª–µ–º–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç. "
                               "–ü—Ä–∏–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã —Ä–µ—à–∞–µ—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Å–µ–π—á–∞—Å."
                               "\n\n–í –∫–æ–Ω—Ü–µ —É–∫–∞–∂–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –≤—ã –±—ã–ª–∏ –±—ã –≥–æ—Ç–æ–≤—ã –ø–ª–∞—Ç–∏—Ç—å –∑–∞ –ø—Ä–æ–¥—É–∫—Ç, "
                               "–∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–≥ –±—ã —Ä–µ—à–∏—Ç—å —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É. –ï–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ, –ø–æ–¥–ø–∏—Å–∫–æ–π –∏–ª–∏ –ø—Ä–æ—Ü–µ–Ω—Ç?",
            }
        ),
    )

    class Meta:
        model = Post
        fields = [
            "title",
            "text",
            "topic",
            "is_visible",
            "is_public"
        ]


class PostProjectForm(PostForm):
    title = forms.CharField(
        label="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
        required=True,
        max_length=128,
        widget=forms.TextInput(attrs={"placeholder": "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ üèó"}),
    )
    url = forms.URLField(
        label="–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ–µ–∫—Ç–∞ üëá",
        required=True,
        widget=forms.TextInput(attrs={"placeholder": "https://"}),
    )
    image = ImageUploadField(
        label="–°–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ –∏–∫–æ–Ω–∫–∞",
        required=True,
        resize=(1024, 1024),
        convert_format=None
    )
    text = forms.CharField(
        label="–û–ø–∏—Å–∞–Ω–∏–µ",
        required=True,
        initial="ü§ó –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –∑–¥–µ—Å—å –≤—Å–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ –≤–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ.\n\n "
                "–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –º–æ–∂–µ—Ç–µ —Å–º–µ–ª–æ —É–¥–∞–ª—è—Ç—å. –û–Ω –∑–¥–µ—Å—å –ª–∏—à—å –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —Å –ø—Ä–æ–±–ª–µ–º–æ–π —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞ "
                "–∏ –∑–∞–¥–∞—Ç—å –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É. –ì–ª–∞–≤–Ω–æ–µ ‚Äî —á—Ç–æ–±—ã —ç—Ç–æ –±—ã–ª–æ –ø–æ–ª–µ–∑–Ω–æ. "
                "–ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω—è—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –æ–Ω–∏ –ª—É—á—à–µ –æ–ø–∏—Å—ã–≤–∞–ª–∏ –≤–∞—à —Å–ª—É—á–∞–π.\n\n"
                "### –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ –∏ —Å—É—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞?\n\n\n\n"
                "### –ö–∞–∫ –ø–æ—è–≤–∏–ª–∞—Å—å –∏–¥–µ—è? –ß—Ç–æ –≤–¥–æ—Ö–Ω–æ–≤–∏–ª–æ?\n\n\n\n"
                "### –ß—Ç–æ –≤–æ—à–ª–æ –≤ –ø—Ä–æ—Ç–æ—Ç–∏–ø –∏ —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –Ω–µ–≥–æ –±—ã–ª–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ?\n\n\n\n"
                "### –ö–∞–∫–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫ –≤—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏? –ü–æ—á–µ–º—É?\n\n\n\n"
                "### –ö–∞–∫ –≤—ã –∑–∞–ø—É—Å–∫–∞–ª–∏—Å—å –∏ –∏—Å–∫–∞–ª–∏ –ø–µ—Ä–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π?\n\n\n\n"
                "### –° –∫–∞–∫–∏–º–∏ —Å–∞–º—ã–º–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ –ø—Ä–∏—à–ª–æ—Å—å —Å—Ç–æ–ª–∫–Ω—É—Ç—å—Å—è?\n\n\n\n"
                "### –°–∫–æ–ª—å–∫–æ –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏? –ï—Å—Ç—å –∏–¥–µ–∏ –∫–∞–∫ —ç—Ç–æ –º–æ–∂–Ω–æ –º–æ–Ω–µ—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å?\n\n\n\n"
                "### –ö–∞–∫–∏–µ –ø–ª–∞–Ω—ã –Ω–∞ –±—É–¥—É—â–µ–µ?\n\n\n\n"
                "### –ù—É–∂–Ω—ã –ª–∏ –∫–∞–∫–∏–µ-—Ç–æ —Å–æ–≤–µ—Ç—ã –∏–ª–∏ –ø–æ–º–æ—â—å –ö–ª—É–±–∞?\n\n\n\n"
                "### –ö–∞–∫–æ–π —Å–æ–≤–µ—Ç –≤—ã –±—ã —Å–∞–º–∏ –º–æ–≥–ª–∏ –¥–∞—Ç—å –∏–¥—É—â–∏–º –ø–æ –≤–∞—à–∏–º —Å—Ç–æ–ø–∞–º?\n\n",
        max_length=500000,
        widget=forms.Textarea(
            attrs={
                "maxlength": 500000,
                "class": "markdown-editor-full",
                "placeholder": "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ –≤–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ!"
                               "\n- –í —á–µ–º –µ–≥–æ —Å—É—Ç—å –∏ –∫–∞–∫ –æ–Ω –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º?"
                               "\n- –ö–∞–∫ –ø–æ—è–≤–∏–ª–∞—Å—å –∏–¥–µ—è?"
                               "\n- –ö–∞–∫–æ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫ –≤—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏?"
                               "\n- –° –∫–∞–∫–∏–º–∏ —Å–∞–º—ã–º–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å?"
                               "\n- –°–∫–æ–ª—å–∫–æ –≤ –∏—Ç–æ–≥–µ –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏?"
                               "\n- –ù—É–∂–Ω—ã –ª–∏ –∫–∞–∫–∏–µ-—Ç–æ —Å–æ–≤–µ—Ç—ã –∏–ª–∏ –ø–æ–º–æ—à—å –ö–ª—É–±–∞?"
            }
        ),
    )

    class Meta:
        model = Post
        fields = [
            "title",
            "text",
            "topic",
            "url",
            "image",
            "is_visible",
            "is_public"
        ]


POST_TYPE_MAP = {
    Post.TYPE_POST: PostTextForm,
    Post.TYPE_LINK: PostLinkForm,
    Post.TYPE_QUESTION: PostQuestionForm,
    Post.TYPE_PAIN: PostPainForm,
    Post.TYPE_PROJECT: PostProjectForm,
}